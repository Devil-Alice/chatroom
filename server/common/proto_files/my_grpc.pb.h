// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: my_grpc.proto
// Protobuf C++ Version: 5.29.0

#ifndef my_5fgrpc_2eproto_2epb_2eh
#define my_5fgrpc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_my_5fgrpc_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_my_5fgrpc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_my_5fgrpc_2eproto;
namespace my_grpc {
class GetChatServerRequest;
struct GetChatServerRequestDefaultTypeInternal;
extern GetChatServerRequestDefaultTypeInternal _GetChatServerRequest_default_instance_;
class GetChatServerResponse;
struct GetChatServerResponseDefaultTypeInternal;
extern GetChatServerResponseDefaultTypeInternal _GetChatServerResponse_default_instance_;
class GetVerifyRequest;
struct GetVerifyRequestDefaultTypeInternal;
extern GetVerifyRequestDefaultTypeInternal _GetVerifyRequest_default_instance_;
class GetVerifyResponse;
struct GetVerifyResponseDefaultTypeInternal;
extern GetVerifyResponseDefaultTypeInternal _GetVerifyResponse_default_instance_;
class NotifyHandleFriendApplyRequest;
struct NotifyHandleFriendApplyRequestDefaultTypeInternal;
extern NotifyHandleFriendApplyRequestDefaultTypeInternal _NotifyHandleFriendApplyRequest_default_instance_;
class NotifyHandleFriendApplyResponse;
struct NotifyHandleFriendApplyResponseDefaultTypeInternal;
extern NotifyHandleFriendApplyResponseDefaultTypeInternal _NotifyHandleFriendApplyResponse_default_instance_;
class NotifyRequest;
struct NotifyRequestDefaultTypeInternal;
extern NotifyRequestDefaultTypeInternal _NotifyRequest_default_instance_;
class NotifyResponse;
struct NotifyResponseDefaultTypeInternal;
extern NotifyResponseDefaultTypeInternal _NotifyResponse_default_instance_;
class NotifySendFriendApplyRequest;
struct NotifySendFriendApplyRequestDefaultTypeInternal;
extern NotifySendFriendApplyRequestDefaultTypeInternal _NotifySendFriendApplyRequest_default_instance_;
class NotifySendFriendApplyResponse;
struct NotifySendFriendApplyResponseDefaultTypeInternal;
extern NotifySendFriendApplyResponseDefaultTypeInternal _NotifySendFriendApplyResponse_default_instance_;
class UserLoginRequest;
struct UserLoginRequestDefaultTypeInternal;
extern UserLoginRequestDefaultTypeInternal _UserLoginRequest_default_instance_;
class UserLoginResponse;
struct UserLoginResponseDefaultTypeInternal;
extern UserLoginResponseDefaultTypeInternal _UserLoginResponse_default_instance_;
}  // namespace my_grpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace my_grpc {

// ===================================================================


// -------------------------------------------------------------------

class UserLoginResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.UserLoginResponse) */ {
 public:
  inline UserLoginResponse() : UserLoginResponse(nullptr) {}
  ~UserLoginResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UserLoginResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UserLoginResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserLoginResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserLoginResponse(const UserLoginResponse& from) : UserLoginResponse(nullptr, from) {}
  inline UserLoginResponse(UserLoginResponse&& from) noexcept
      : UserLoginResponse(nullptr, std::move(from)) {}
  inline UserLoginResponse& operator=(const UserLoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLoginResponse& operator=(UserLoginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLoginResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLoginResponse* internal_default_instance() {
    return reinterpret_cast<const UserLoginResponse*>(
        &_UserLoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(UserLoginResponse& a, UserLoginResponse& b) { a.Swap(&b); }
  inline void Swap(UserLoginResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLoginResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLoginResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UserLoginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLoginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserLoginResponse& from) { UserLoginResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UserLoginResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.UserLoginResponse"; }

 protected:
  explicit UserLoginResponse(::google::protobuf::Arena* arena);
  UserLoginResponse(::google::protobuf::Arena* arena, const UserLoginResponse& from);
  UserLoginResponse(::google::protobuf::Arena* arena, UserLoginResponse&& from) noexcept
      : UserLoginResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 2,
    kTokenFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string uid = 2;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // string token = 3;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.UserLoginResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UserLoginResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t error_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class UserLoginRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.UserLoginRequest) */ {
 public:
  inline UserLoginRequest() : UserLoginRequest(nullptr) {}
  ~UserLoginRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UserLoginRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UserLoginRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UserLoginRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UserLoginRequest(const UserLoginRequest& from) : UserLoginRequest(nullptr, from) {}
  inline UserLoginRequest(UserLoginRequest&& from) noexcept
      : UserLoginRequest(nullptr, std::move(from)) {}
  inline UserLoginRequest& operator=(const UserLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLoginRequest& operator=(UserLoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLoginRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLoginRequest* internal_default_instance() {
    return reinterpret_cast<const UserLoginRequest*>(
        &_UserLoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(UserLoginRequest& a, UserLoginRequest& b) { a.Swap(&b); }
  inline void Swap(UserLoginRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLoginRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLoginRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UserLoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UserLoginRequest& from) { UserLoginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UserLoginRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.UserLoginRequest"; }

 protected:
  explicit UserLoginRequest(::google::protobuf::Arena* arena);
  UserLoginRequest(::google::protobuf::Arena* arena, const UserLoginRequest& from);
  UserLoginRequest(::google::protobuf::Arena* arena, UserLoginRequest&& from) noexcept
      : UserLoginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kTokenFieldNumber = 2,
    kServerNameFieldNumber = 3,
  };
  // string uid = 1;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string server_name = 3;
  void clear_server_name() ;
  const std::string& server_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_server_name(Arg_&& arg, Args_... args);
  std::string* mutable_server_name();
  PROTOBUF_NODISCARD std::string* release_server_name();
  void set_allocated_server_name(std::string* value);

  private:
  const std::string& _internal_server_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_server_name(
      const std::string& value);
  std::string* _internal_mutable_server_name();

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.UserLoginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UserLoginRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr server_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class NotifySendFriendApplyResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.NotifySendFriendApplyResponse) */ {
 public:
  inline NotifySendFriendApplyResponse() : NotifySendFriendApplyResponse(nullptr) {}
  ~NotifySendFriendApplyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NotifySendFriendApplyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NotifySendFriendApplyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySendFriendApplyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySendFriendApplyResponse(const NotifySendFriendApplyResponse& from) : NotifySendFriendApplyResponse(nullptr, from) {}
  inline NotifySendFriendApplyResponse(NotifySendFriendApplyResponse&& from) noexcept
      : NotifySendFriendApplyResponse(nullptr, std::move(from)) {}
  inline NotifySendFriendApplyResponse& operator=(const NotifySendFriendApplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySendFriendApplyResponse& operator=(NotifySendFriendApplyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySendFriendApplyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySendFriendApplyResponse* internal_default_instance() {
    return reinterpret_cast<const NotifySendFriendApplyResponse*>(
        &_NotifySendFriendApplyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(NotifySendFriendApplyResponse& a, NotifySendFriendApplyResponse& b) { a.Swap(&b); }
  inline void Swap(NotifySendFriendApplyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySendFriendApplyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySendFriendApplyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NotifySendFriendApplyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySendFriendApplyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySendFriendApplyResponse& from) { NotifySendFriendApplyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NotifySendFriendApplyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.NotifySendFriendApplyResponse"; }

 protected:
  explicit NotifySendFriendApplyResponse(::google::protobuf::Arena* arena);
  NotifySendFriendApplyResponse(::google::protobuf::Arena* arena, const NotifySendFriendApplyResponse& from);
  NotifySendFriendApplyResponse(::google::protobuf::Arena* arena, NotifySendFriendApplyResponse&& from) noexcept
      : NotifySendFriendApplyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromUidFieldNumber = 2,
    kToUidFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string from_uid = 2;
  void clear_from_uid() ;
  const std::string& from_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_uid(Arg_&& arg, Args_... args);
  std::string* mutable_from_uid();
  PROTOBUF_NODISCARD std::string* release_from_uid();
  void set_allocated_from_uid(std::string* value);

  private:
  const std::string& _internal_from_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_uid(
      const std::string& value);
  std::string* _internal_mutable_from_uid();

  public:
  // string to_uid = 3;
  void clear_to_uid() ;
  const std::string& to_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_uid(Arg_&& arg, Args_... args);
  std::string* mutable_to_uid();
  PROTOBUF_NODISCARD std::string* release_to_uid();
  void set_allocated_to_uid(std::string* value);

  private:
  const std::string& _internal_to_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_uid(
      const std::string& value);
  std::string* _internal_mutable_to_uid();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.NotifySendFriendApplyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NotifySendFriendApplyResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr from_uid_;
    ::google::protobuf::internal::ArenaStringPtr to_uid_;
    ::int32_t error_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class NotifySendFriendApplyRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.NotifySendFriendApplyRequest) */ {
 public:
  inline NotifySendFriendApplyRequest() : NotifySendFriendApplyRequest(nullptr) {}
  ~NotifySendFriendApplyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NotifySendFriendApplyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NotifySendFriendApplyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifySendFriendApplyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifySendFriendApplyRequest(const NotifySendFriendApplyRequest& from) : NotifySendFriendApplyRequest(nullptr, from) {}
  inline NotifySendFriendApplyRequest(NotifySendFriendApplyRequest&& from) noexcept
      : NotifySendFriendApplyRequest(nullptr, std::move(from)) {}
  inline NotifySendFriendApplyRequest& operator=(const NotifySendFriendApplyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifySendFriendApplyRequest& operator=(NotifySendFriendApplyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifySendFriendApplyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifySendFriendApplyRequest* internal_default_instance() {
    return reinterpret_cast<const NotifySendFriendApplyRequest*>(
        &_NotifySendFriendApplyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(NotifySendFriendApplyRequest& a, NotifySendFriendApplyRequest& b) { a.Swap(&b); }
  inline void Swap(NotifySendFriendApplyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifySendFriendApplyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifySendFriendApplyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NotifySendFriendApplyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifySendFriendApplyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifySendFriendApplyRequest& from) { NotifySendFriendApplyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NotifySendFriendApplyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.NotifySendFriendApplyRequest"; }

 protected:
  explicit NotifySendFriendApplyRequest(::google::protobuf::Arena* arena);
  NotifySendFriendApplyRequest(::google::protobuf::Arena* arena, const NotifySendFriendApplyRequest& from);
  NotifySendFriendApplyRequest(::google::protobuf::Arena* arena, NotifySendFriendApplyRequest&& from) noexcept
      : NotifySendFriendApplyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromUidFieldNumber = 1,
    kToUidFieldNumber = 2,
    kRemarkNameFieldNumber = 3,
    kApplyMessageFieldNumber = 4,
    kStatusFieldNumber = 5,
  };
  // string from_uid = 1;
  void clear_from_uid() ;
  const std::string& from_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_uid(Arg_&& arg, Args_... args);
  std::string* mutable_from_uid();
  PROTOBUF_NODISCARD std::string* release_from_uid();
  void set_allocated_from_uid(std::string* value);

  private:
  const std::string& _internal_from_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_uid(
      const std::string& value);
  std::string* _internal_mutable_from_uid();

  public:
  // string to_uid = 2;
  void clear_to_uid() ;
  const std::string& to_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_uid(Arg_&& arg, Args_... args);
  std::string* mutable_to_uid();
  PROTOBUF_NODISCARD std::string* release_to_uid();
  void set_allocated_to_uid(std::string* value);

  private:
  const std::string& _internal_to_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_uid(
      const std::string& value);
  std::string* _internal_mutable_to_uid();

  public:
  // string remark_name = 3;
  void clear_remark_name() ;
  const std::string& remark_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remark_name(Arg_&& arg, Args_... args);
  std::string* mutable_remark_name();
  PROTOBUF_NODISCARD std::string* release_remark_name();
  void set_allocated_remark_name(std::string* value);

  private:
  const std::string& _internal_remark_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remark_name(
      const std::string& value);
  std::string* _internal_mutable_remark_name();

  public:
  // string apply_message = 4;
  void clear_apply_message() ;
  const std::string& apply_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_apply_message(Arg_&& arg, Args_... args);
  std::string* mutable_apply_message();
  PROTOBUF_NODISCARD std::string* release_apply_message();
  void set_allocated_apply_message(std::string* value);

  private:
  const std::string& _internal_apply_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_apply_message(
      const std::string& value);
  std::string* _internal_mutable_apply_message();

  public:
  // int32 status = 5;
  void clear_status() ;
  ::int32_t status() const;
  void set_status(::int32_t value);

  private:
  ::int32_t _internal_status() const;
  void _internal_set_status(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.NotifySendFriendApplyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NotifySendFriendApplyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr from_uid_;
    ::google::protobuf::internal::ArenaStringPtr to_uid_;
    ::google::protobuf::internal::ArenaStringPtr remark_name_;
    ::google::protobuf::internal::ArenaStringPtr apply_message_;
    ::int32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class NotifyResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.NotifyResponse) */ {
 public:
  inline NotifyResponse() : NotifyResponse(nullptr) {}
  ~NotifyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NotifyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NotifyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyResponse(const NotifyResponse& from) : NotifyResponse(nullptr, from) {}
  inline NotifyResponse(NotifyResponse&& from) noexcept
      : NotifyResponse(nullptr, std::move(from)) {}
  inline NotifyResponse& operator=(const NotifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyResponse& operator=(NotifyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyResponse* internal_default_instance() {
    return reinterpret_cast<const NotifyResponse*>(
        &_NotifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(NotifyResponse& a, NotifyResponse& b) { a.Swap(&b); }
  inline void Swap(NotifyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NotifyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyResponse& from) { NotifyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NotifyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.NotifyResponse"; }

 protected:
  explicit NotifyResponse(::google::protobuf::Arena* arena);
  NotifyResponse(::google::protobuf::Arena* arena, const NotifyResponse& from);
  NotifyResponse(::google::protobuf::Arena* arena, NotifyResponse&& from) noexcept
      : NotifyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 2,
    kTokenFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string uid = 2;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // string token = 3;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.NotifyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NotifyResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t error_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class NotifyRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.NotifyRequest) */ {
 public:
  inline NotifyRequest() : NotifyRequest(nullptr) {}
  ~NotifyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NotifyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NotifyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyRequest(const NotifyRequest& from) : NotifyRequest(nullptr, from) {}
  inline NotifyRequest(NotifyRequest&& from) noexcept
      : NotifyRequest(nullptr, std::move(from)) {}
  inline NotifyRequest& operator=(const NotifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyRequest& operator=(NotifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyRequest* internal_default_instance() {
    return reinterpret_cast<const NotifyRequest*>(
        &_NotifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(NotifyRequest& a, NotifyRequest& b) { a.Swap(&b); }
  inline void Swap(NotifyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NotifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyRequest& from) { NotifyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NotifyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.NotifyRequest"; }

 protected:
  explicit NotifyRequest(::google::protobuf::Arena* arena);
  NotifyRequest(::google::protobuf::Arena* arena, const NotifyRequest& from);
  NotifyRequest(::google::protobuf::Arena* arena, NotifyRequest&& from) noexcept
      : NotifyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromUidFieldNumber = 1,
    kTokenFieldNumber = 2,
    kToUidFieldNumber = 3,
    kMessageFieldNumber = 5,
    kRequestIdFieldNumber = 4,
  };
  // string from_uid = 1;
  void clear_from_uid() ;
  const std::string& from_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_uid(Arg_&& arg, Args_... args);
  std::string* mutable_from_uid();
  PROTOBUF_NODISCARD std::string* release_from_uid();
  void set_allocated_from_uid(std::string* value);

  private:
  const std::string& _internal_from_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_uid(
      const std::string& value);
  std::string* _internal_mutable_from_uid();

  public:
  // string token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string to_uid = 3;
  void clear_to_uid() ;
  const std::string& to_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_uid(Arg_&& arg, Args_... args);
  std::string* mutable_to_uid();
  PROTOBUF_NODISCARD std::string* release_to_uid();
  void set_allocated_to_uid(std::string* value);

  private:
  const std::string& _internal_to_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_uid(
      const std::string& value);
  std::string* _internal_mutable_to_uid();

  public:
  // string message = 5;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // int32 request_id = 4;
  void clear_request_id() ;
  ::int32_t request_id() const;
  void set_request_id(::int32_t value);

  private:
  ::int32_t _internal_request_id() const;
  void _internal_set_request_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.NotifyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NotifyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr from_uid_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr to_uid_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::int32_t request_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class NotifyHandleFriendApplyResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.NotifyHandleFriendApplyResponse) */ {
 public:
  inline NotifyHandleFriendApplyResponse() : NotifyHandleFriendApplyResponse(nullptr) {}
  ~NotifyHandleFriendApplyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NotifyHandleFriendApplyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NotifyHandleFriendApplyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyHandleFriendApplyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyHandleFriendApplyResponse(const NotifyHandleFriendApplyResponse& from) : NotifyHandleFriendApplyResponse(nullptr, from) {}
  inline NotifyHandleFriendApplyResponse(NotifyHandleFriendApplyResponse&& from) noexcept
      : NotifyHandleFriendApplyResponse(nullptr, std::move(from)) {}
  inline NotifyHandleFriendApplyResponse& operator=(const NotifyHandleFriendApplyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyHandleFriendApplyResponse& operator=(NotifyHandleFriendApplyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyHandleFriendApplyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyHandleFriendApplyResponse* internal_default_instance() {
    return reinterpret_cast<const NotifyHandleFriendApplyResponse*>(
        &_NotifyHandleFriendApplyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(NotifyHandleFriendApplyResponse& a, NotifyHandleFriendApplyResponse& b) { a.Swap(&b); }
  inline void Swap(NotifyHandleFriendApplyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyHandleFriendApplyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyHandleFriendApplyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NotifyHandleFriendApplyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyHandleFriendApplyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyHandleFriendApplyResponse& from) { NotifyHandleFriendApplyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NotifyHandleFriendApplyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.NotifyHandleFriendApplyResponse"; }

 protected:
  explicit NotifyHandleFriendApplyResponse(::google::protobuf::Arena* arena);
  NotifyHandleFriendApplyResponse(::google::protobuf::Arena* arena, const NotifyHandleFriendApplyResponse& from);
  NotifyHandleFriendApplyResponse(::google::protobuf::Arena* arena, NotifyHandleFriendApplyResponse&& from) noexcept
      : NotifyHandleFriendApplyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromUidFieldNumber = 2,
    kToUidFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string from_uid = 2;
  void clear_from_uid() ;
  const std::string& from_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_uid(Arg_&& arg, Args_... args);
  std::string* mutable_from_uid();
  PROTOBUF_NODISCARD std::string* release_from_uid();
  void set_allocated_from_uid(std::string* value);

  private:
  const std::string& _internal_from_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_uid(
      const std::string& value);
  std::string* _internal_mutable_from_uid();

  public:
  // string to_uid = 3;
  void clear_to_uid() ;
  const std::string& to_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_uid(Arg_&& arg, Args_... args);
  std::string* mutable_to_uid();
  PROTOBUF_NODISCARD std::string* release_to_uid();
  void set_allocated_to_uid(std::string* value);

  private:
  const std::string& _internal_to_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_uid(
      const std::string& value);
  std::string* _internal_mutable_to_uid();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.NotifyHandleFriendApplyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NotifyHandleFriendApplyResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr from_uid_;
    ::google::protobuf::internal::ArenaStringPtr to_uid_;
    ::int32_t error_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class NotifyHandleFriendApplyRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.NotifyHandleFriendApplyRequest) */ {
 public:
  inline NotifyHandleFriendApplyRequest() : NotifyHandleFriendApplyRequest(nullptr) {}
  ~NotifyHandleFriendApplyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NotifyHandleFriendApplyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NotifyHandleFriendApplyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NotifyHandleFriendApplyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NotifyHandleFriendApplyRequest(const NotifyHandleFriendApplyRequest& from) : NotifyHandleFriendApplyRequest(nullptr, from) {}
  inline NotifyHandleFriendApplyRequest(NotifyHandleFriendApplyRequest&& from) noexcept
      : NotifyHandleFriendApplyRequest(nullptr, std::move(from)) {}
  inline NotifyHandleFriendApplyRequest& operator=(const NotifyHandleFriendApplyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyHandleFriendApplyRequest& operator=(NotifyHandleFriendApplyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NotifyHandleFriendApplyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NotifyHandleFriendApplyRequest* internal_default_instance() {
    return reinterpret_cast<const NotifyHandleFriendApplyRequest*>(
        &_NotifyHandleFriendApplyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(NotifyHandleFriendApplyRequest& a, NotifyHandleFriendApplyRequest& b) { a.Swap(&b); }
  inline void Swap(NotifyHandleFriendApplyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NotifyHandleFriendApplyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NotifyHandleFriendApplyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NotifyHandleFriendApplyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NotifyHandleFriendApplyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NotifyHandleFriendApplyRequest& from) { NotifyHandleFriendApplyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NotifyHandleFriendApplyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.NotifyHandleFriendApplyRequest"; }

 protected:
  explicit NotifyHandleFriendApplyRequest(::google::protobuf::Arena* arena);
  NotifyHandleFriendApplyRequest(::google::protobuf::Arena* arena, const NotifyHandleFriendApplyRequest& from);
  NotifyHandleFriendApplyRequest(::google::protobuf::Arena* arena, NotifyHandleFriendApplyRequest&& from) noexcept
      : NotifyHandleFriendApplyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromUidFieldNumber = 1,
    kToUidFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // string from_uid = 1;
  void clear_from_uid() ;
  const std::string& from_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_uid(Arg_&& arg, Args_... args);
  std::string* mutable_from_uid();
  PROTOBUF_NODISCARD std::string* release_from_uid();
  void set_allocated_from_uid(std::string* value);

  private:
  const std::string& _internal_from_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_uid(
      const std::string& value);
  std::string* _internal_mutable_from_uid();

  public:
  // string to_uid = 2;
  void clear_to_uid() ;
  const std::string& to_uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_uid(Arg_&& arg, Args_... args);
  std::string* mutable_to_uid();
  PROTOBUF_NODISCARD std::string* release_to_uid();
  void set_allocated_to_uid(std::string* value);

  private:
  const std::string& _internal_to_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_uid(
      const std::string& value);
  std::string* _internal_mutable_to_uid();

  public:
  // int32 status = 3;
  void clear_status() ;
  ::int32_t status() const;
  void set_status(::int32_t value);

  private:
  ::int32_t _internal_status() const;
  void _internal_set_status(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.NotifyHandleFriendApplyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NotifyHandleFriendApplyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr from_uid_;
    ::google::protobuf::internal::ArenaStringPtr to_uid_;
    ::int32_t status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class GetVerifyResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.GetVerifyResponse) */ {
 public:
  inline GetVerifyResponse() : GetVerifyResponse(nullptr) {}
  ~GetVerifyResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetVerifyResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetVerifyResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVerifyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVerifyResponse(const GetVerifyResponse& from) : GetVerifyResponse(nullptr, from) {}
  inline GetVerifyResponse(GetVerifyResponse&& from) noexcept
      : GetVerifyResponse(nullptr, std::move(from)) {}
  inline GetVerifyResponse& operator=(const GetVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVerifyResponse& operator=(GetVerifyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVerifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVerifyResponse* internal_default_instance() {
    return reinterpret_cast<const GetVerifyResponse*>(
        &_GetVerifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetVerifyResponse& a, GetVerifyResponse& b) { a.Swap(&b); }
  inline void Swap(GetVerifyResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVerifyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVerifyResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetVerifyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVerifyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVerifyResponse& from) { GetVerifyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetVerifyResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.GetVerifyResponse"; }

 protected:
  explicit GetVerifyResponse(::google::protobuf::Arena* arena);
  GetVerifyResponse(::google::protobuf::Arena* arena, const GetVerifyResponse& from);
  GetVerifyResponse(::google::protobuf::Arena* arena, GetVerifyResponse&& from) noexcept
      : GetVerifyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPhoneFieldNumber = 2,
    kCodeFieldNumber = 3,
    kErrorFieldNumber = 1,
  };
  // string phone = 2;
  void clear_phone() ;
  const std::string& phone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone(Arg_&& arg, Args_... args);
  std::string* mutable_phone();
  PROTOBUF_NODISCARD std::string* release_phone();
  void set_allocated_phone(std::string* value);

  private:
  const std::string& _internal_phone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone(
      const std::string& value);
  std::string* _internal_mutable_phone();

  public:
  // string code = 3;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.GetVerifyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVerifyResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr phone_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::int32_t error_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class GetVerifyRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.GetVerifyRequest) */ {
 public:
  inline GetVerifyRequest() : GetVerifyRequest(nullptr) {}
  ~GetVerifyRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetVerifyRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetVerifyRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVerifyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVerifyRequest(const GetVerifyRequest& from) : GetVerifyRequest(nullptr, from) {}
  inline GetVerifyRequest(GetVerifyRequest&& from) noexcept
      : GetVerifyRequest(nullptr, std::move(from)) {}
  inline GetVerifyRequest& operator=(const GetVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVerifyRequest& operator=(GetVerifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVerifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVerifyRequest* internal_default_instance() {
    return reinterpret_cast<const GetVerifyRequest*>(
        &_GetVerifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetVerifyRequest& a, GetVerifyRequest& b) { a.Swap(&b); }
  inline void Swap(GetVerifyRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVerifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVerifyRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetVerifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVerifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVerifyRequest& from) { GetVerifyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetVerifyRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.GetVerifyRequest"; }

 protected:
  explicit GetVerifyRequest(::google::protobuf::Arena* arena);
  GetVerifyRequest(::google::protobuf::Arena* arena, const GetVerifyRequest& from);
  GetVerifyRequest(::google::protobuf::Arena* arena, GetVerifyRequest&& from) noexcept
      : GetVerifyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPhoneFieldNumber = 1,
  };
  // string phone = 1;
  void clear_phone() ;
  const std::string& phone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_phone(Arg_&& arg, Args_... args);
  std::string* mutable_phone();
  PROTOBUF_NODISCARD std::string* release_phone();
  void set_allocated_phone(std::string* value);

  private:
  const std::string& _internal_phone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_phone(
      const std::string& value);
  std::string* _internal_mutable_phone();

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.GetVerifyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVerifyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr phone_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class GetChatServerResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.GetChatServerResponse) */ {
 public:
  inline GetChatServerResponse() : GetChatServerResponse(nullptr) {}
  ~GetChatServerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChatServerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChatServerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChatServerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChatServerResponse(const GetChatServerResponse& from) : GetChatServerResponse(nullptr, from) {}
  inline GetChatServerResponse(GetChatServerResponse&& from) noexcept
      : GetChatServerResponse(nullptr, std::move(from)) {}
  inline GetChatServerResponse& operator=(const GetChatServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChatServerResponse& operator=(GetChatServerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChatServerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChatServerResponse* internal_default_instance() {
    return reinterpret_cast<const GetChatServerResponse*>(
        &_GetChatServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetChatServerResponse& a, GetChatServerResponse& b) { a.Swap(&b); }
  inline void Swap(GetChatServerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChatServerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChatServerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChatServerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChatServerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChatServerResponse& from) { GetChatServerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChatServerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.GetChatServerResponse"; }

 protected:
  explicit GetChatServerResponse(::google::protobuf::Arena* arena);
  GetChatServerResponse(::google::protobuf::Arena* arena, const GetChatServerResponse& from);
  GetChatServerResponse(::google::protobuf::Arena* arena, GetChatServerResponse&& from) noexcept
      : GetChatServerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostFieldNumber = 2,
    kTokenFieldNumber = 4,
    kErrorFieldNumber = 1,
    kPortFieldNumber = 3,
  };
  // string host = 2;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // string token = 4;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // int32 error = 1;
  void clear_error() ;
  ::int32_t error() const;
  void set_error(::int32_t value);

  private:
  ::int32_t _internal_error() const;
  void _internal_set_error(::int32_t value);

  public:
  // int32 port = 3;
  void clear_port() ;
  ::int32_t port() const;
  void set_port(::int32_t value);

  private:
  ::int32_t _internal_port() const;
  void _internal_set_port(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.GetChatServerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChatServerResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::int32_t error_;
    ::int32_t port_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class GetChatServerRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:my_grpc.GetChatServerRequest) */ {
 public:
  inline GetChatServerRequest() : GetChatServerRequest(nullptr) {}
  ~GetChatServerRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChatServerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChatServerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChatServerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChatServerRequest(const GetChatServerRequest& from) : GetChatServerRequest(nullptr, from) {}
  inline GetChatServerRequest(GetChatServerRequest&& from) noexcept
      : GetChatServerRequest(nullptr, std::move(from)) {}
  inline GetChatServerRequest& operator=(const GetChatServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChatServerRequest& operator=(GetChatServerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChatServerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChatServerRequest* internal_default_instance() {
    return reinterpret_cast<const GetChatServerRequest*>(
        &_GetChatServerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetChatServerRequest& a, GetChatServerRequest& b) { a.Swap(&b); }
  inline void Swap(GetChatServerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChatServerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChatServerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChatServerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChatServerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChatServerRequest& from) { GetChatServerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChatServerRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "my_grpc.GetChatServerRequest"; }

 protected:
  explicit GetChatServerRequest(::google::protobuf::Arena* arena);
  GetChatServerRequest(::google::protobuf::Arena* arena, const GetChatServerRequest& from);
  GetChatServerRequest(::google::protobuf::Arena* arena, GetChatServerRequest&& from) noexcept
      : GetChatServerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
  };
  // string uid = 1;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // @@protoc_insertion_point(class_scope:my_grpc.GetChatServerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChatServerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_my_5fgrpc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetVerifyRequest

// string phone = 1;
inline void GetVerifyRequest::clear_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.ClearToEmpty();
}
inline const std::string& GetVerifyRequest::phone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.GetVerifyRequest.phone)
  return _internal_phone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVerifyRequest::set_phone(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.GetVerifyRequest.phone)
}
inline std::string* GetVerifyRequest::mutable_phone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone();
  // @@protoc_insertion_point(field_mutable:my_grpc.GetVerifyRequest.phone)
  return _s;
}
inline const std::string& GetVerifyRequest::_internal_phone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_.Get();
}
inline void GetVerifyRequest::_internal_set_phone(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.Set(value, GetArena());
}
inline std::string* GetVerifyRequest::_internal_mutable_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.phone_.Mutable( GetArena());
}
inline std::string* GetVerifyRequest::release_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.GetVerifyRequest.phone)
  return _impl_.phone_.Release();
}
inline void GetVerifyRequest::set_allocated_phone(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_.IsDefault()) {
    _impl_.phone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.GetVerifyRequest.phone)
}

// -------------------------------------------------------------------

// GetVerifyResponse

// int32 error = 1;
inline void GetVerifyResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
}
inline ::int32_t GetVerifyResponse::error() const {
  // @@protoc_insertion_point(field_get:my_grpc.GetVerifyResponse.error)
  return _internal_error();
}
inline void GetVerifyResponse::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:my_grpc.GetVerifyResponse.error)
}
inline ::int32_t GetVerifyResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_;
}
inline void GetVerifyResponse::_internal_set_error(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string phone = 2;
inline void GetVerifyResponse::clear_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.ClearToEmpty();
}
inline const std::string& GetVerifyResponse::phone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.GetVerifyResponse.phone)
  return _internal_phone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVerifyResponse::set_phone(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.GetVerifyResponse.phone)
}
inline std::string* GetVerifyResponse::mutable_phone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_phone();
  // @@protoc_insertion_point(field_mutable:my_grpc.GetVerifyResponse.phone)
  return _s;
}
inline const std::string& GetVerifyResponse::_internal_phone() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.phone_.Get();
}
inline void GetVerifyResponse::_internal_set_phone(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.Set(value, GetArena());
}
inline std::string* GetVerifyResponse::_internal_mutable_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.phone_.Mutable( GetArena());
}
inline std::string* GetVerifyResponse::release_phone() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.GetVerifyResponse.phone)
  return _impl_.phone_.Release();
}
inline void GetVerifyResponse::set_allocated_phone(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.phone_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.phone_.IsDefault()) {
    _impl_.phone_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.GetVerifyResponse.phone)
}

// string code = 3;
inline void GetVerifyResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& GetVerifyResponse::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.GetVerifyResponse.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVerifyResponse::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.GetVerifyResponse.code)
}
inline std::string* GetVerifyResponse::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:my_grpc.GetVerifyResponse.code)
  return _s;
}
inline const std::string& GetVerifyResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void GetVerifyResponse::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* GetVerifyResponse::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* GetVerifyResponse::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.GetVerifyResponse.code)
  return _impl_.code_.Release();
}
inline void GetVerifyResponse::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_.IsDefault()) {
    _impl_.code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.GetVerifyResponse.code)
}

// -------------------------------------------------------------------

// GetChatServerRequest

// string uid = 1;
inline void GetChatServerRequest::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& GetChatServerRequest::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.GetChatServerRequest.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChatServerRequest::set_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.GetChatServerRequest.uid)
}
inline std::string* GetChatServerRequest::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.GetChatServerRequest.uid)
  return _s;
}
inline const std::string& GetChatServerRequest::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_.Get();
}
inline void GetChatServerRequest::_internal_set_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* GetChatServerRequest::_internal_mutable_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* GetChatServerRequest::release_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.GetChatServerRequest.uid)
  return _impl_.uid_.Release();
}
inline void GetChatServerRequest::set_allocated_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uid_.IsDefault()) {
    _impl_.uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.GetChatServerRequest.uid)
}

// -------------------------------------------------------------------

// GetChatServerResponse

// int32 error = 1;
inline void GetChatServerResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
}
inline ::int32_t GetChatServerResponse::error() const {
  // @@protoc_insertion_point(field_get:my_grpc.GetChatServerResponse.error)
  return _internal_error();
}
inline void GetChatServerResponse::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:my_grpc.GetChatServerResponse.error)
}
inline ::int32_t GetChatServerResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_;
}
inline void GetChatServerResponse::_internal_set_error(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string host = 2;
inline void GetChatServerResponse::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& GetChatServerResponse::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.GetChatServerResponse.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChatServerResponse::set_host(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.GetChatServerResponse.host)
}
inline std::string* GetChatServerResponse::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:my_grpc.GetChatServerResponse.host)
  return _s;
}
inline const std::string& GetChatServerResponse::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void GetChatServerResponse::_internal_set_host(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(value, GetArena());
}
inline std::string* GetChatServerResponse::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* GetChatServerResponse::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.GetChatServerResponse.host)
  return _impl_.host_.Release();
}
inline void GetChatServerResponse::set_allocated_host(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_.IsDefault()) {
    _impl_.host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.GetChatServerResponse.host)
}

// int32 port = 3;
inline void GetChatServerResponse::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0;
}
inline ::int32_t GetChatServerResponse::port() const {
  // @@protoc_insertion_point(field_get:my_grpc.GetChatServerResponse.port)
  return _internal_port();
}
inline void GetChatServerResponse::set_port(::int32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:my_grpc.GetChatServerResponse.port)
}
inline ::int32_t GetChatServerResponse::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void GetChatServerResponse::_internal_set_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// string token = 4;
inline void GetChatServerResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& GetChatServerResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.GetChatServerResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetChatServerResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.GetChatServerResponse.token)
}
inline std::string* GetChatServerResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:my_grpc.GetChatServerResponse.token)
  return _s;
}
inline const std::string& GetChatServerResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void GetChatServerResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* GetChatServerResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* GetChatServerResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.GetChatServerResponse.token)
  return _impl_.token_.Release();
}
inline void GetChatServerResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.GetChatServerResponse.token)
}

// -------------------------------------------------------------------

// UserLoginRequest

// string uid = 1;
inline void UserLoginRequest::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& UserLoginRequest::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.UserLoginRequest.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLoginRequest::set_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.UserLoginRequest.uid)
}
inline std::string* UserLoginRequest::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.UserLoginRequest.uid)
  return _s;
}
inline const std::string& UserLoginRequest::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_.Get();
}
inline void UserLoginRequest::_internal_set_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* UserLoginRequest::_internal_mutable_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* UserLoginRequest::release_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.UserLoginRequest.uid)
  return _impl_.uid_.Release();
}
inline void UserLoginRequest::set_allocated_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uid_.IsDefault()) {
    _impl_.uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.UserLoginRequest.uid)
}

// string token = 2;
inline void UserLoginRequest::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserLoginRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.UserLoginRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLoginRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.UserLoginRequest.token)
}
inline std::string* UserLoginRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:my_grpc.UserLoginRequest.token)
  return _s;
}
inline const std::string& UserLoginRequest::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void UserLoginRequest::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserLoginRequest::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserLoginRequest::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.UserLoginRequest.token)
  return _impl_.token_.Release();
}
inline void UserLoginRequest::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.UserLoginRequest.token)
}

// string server_name = 3;
inline void UserLoginRequest::clear_server_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_name_.ClearToEmpty();
}
inline const std::string& UserLoginRequest::server_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.UserLoginRequest.server_name)
  return _internal_server_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLoginRequest::set_server_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.UserLoginRequest.server_name)
}
inline std::string* UserLoginRequest::mutable_server_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_server_name();
  // @@protoc_insertion_point(field_mutable:my_grpc.UserLoginRequest.server_name)
  return _s;
}
inline const std::string& UserLoginRequest::_internal_server_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.server_name_.Get();
}
inline void UserLoginRequest::_internal_set_server_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_name_.Set(value, GetArena());
}
inline std::string* UserLoginRequest::_internal_mutable_server_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.server_name_.Mutable( GetArena());
}
inline std::string* UserLoginRequest::release_server_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.UserLoginRequest.server_name)
  return _impl_.server_name_.Release();
}
inline void UserLoginRequest::set_allocated_server_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.server_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.server_name_.IsDefault()) {
    _impl_.server_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.UserLoginRequest.server_name)
}

// -------------------------------------------------------------------

// UserLoginResponse

// int32 error = 1;
inline void UserLoginResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
}
inline ::int32_t UserLoginResponse::error() const {
  // @@protoc_insertion_point(field_get:my_grpc.UserLoginResponse.error)
  return _internal_error();
}
inline void UserLoginResponse::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:my_grpc.UserLoginResponse.error)
}
inline ::int32_t UserLoginResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_;
}
inline void UserLoginResponse::_internal_set_error(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string uid = 2;
inline void UserLoginResponse::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& UserLoginResponse::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.UserLoginResponse.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLoginResponse::set_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.UserLoginResponse.uid)
}
inline std::string* UserLoginResponse::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.UserLoginResponse.uid)
  return _s;
}
inline const std::string& UserLoginResponse::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_.Get();
}
inline void UserLoginResponse::_internal_set_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* UserLoginResponse::_internal_mutable_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* UserLoginResponse::release_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.UserLoginResponse.uid)
  return _impl_.uid_.Release();
}
inline void UserLoginResponse::set_allocated_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uid_.IsDefault()) {
    _impl_.uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.UserLoginResponse.uid)
}

// string token = 3;
inline void UserLoginResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserLoginResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.UserLoginResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLoginResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.UserLoginResponse.token)
}
inline std::string* UserLoginResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:my_grpc.UserLoginResponse.token)
  return _s;
}
inline const std::string& UserLoginResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void UserLoginResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserLoginResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserLoginResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.UserLoginResponse.token)
  return _impl_.token_.Release();
}
inline void UserLoginResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.UserLoginResponse.token)
}

// -------------------------------------------------------------------

// NotifyRequest

// string from_uid = 1;
inline void NotifyRequest::clear_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.ClearToEmpty();
}
inline const std::string& NotifyRequest::from_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyRequest.from_uid)
  return _internal_from_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyRequest::set_from_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyRequest.from_uid)
}
inline std::string* NotifyRequest::mutable_from_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyRequest.from_uid)
  return _s;
}
inline const std::string& NotifyRequest::_internal_from_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_uid_.Get();
}
inline void NotifyRequest::_internal_set_from_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(value, GetArena());
}
inline std::string* NotifyRequest::_internal_mutable_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_uid_.Mutable( GetArena());
}
inline std::string* NotifyRequest::release_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyRequest.from_uid)
  return _impl_.from_uid_.Release();
}
inline void NotifyRequest::set_allocated_from_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_uid_.IsDefault()) {
    _impl_.from_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyRequest.from_uid)
}

// string token = 2;
inline void NotifyRequest::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& NotifyRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyRequest.token)
}
inline std::string* NotifyRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyRequest.token)
  return _s;
}
inline const std::string& NotifyRequest::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void NotifyRequest::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* NotifyRequest::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* NotifyRequest::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyRequest.token)
  return _impl_.token_.Release();
}
inline void NotifyRequest::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyRequest.token)
}

// string to_uid = 3;
inline void NotifyRequest::clear_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.ClearToEmpty();
}
inline const std::string& NotifyRequest::to_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyRequest.to_uid)
  return _internal_to_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyRequest::set_to_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyRequest.to_uid)
}
inline std::string* NotifyRequest::mutable_to_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyRequest.to_uid)
  return _s;
}
inline const std::string& NotifyRequest::_internal_to_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_uid_.Get();
}
inline void NotifyRequest::_internal_set_to_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(value, GetArena());
}
inline std::string* NotifyRequest::_internal_mutable_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_uid_.Mutable( GetArena());
}
inline std::string* NotifyRequest::release_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyRequest.to_uid)
  return _impl_.to_uid_.Release();
}
inline void NotifyRequest::set_allocated_to_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_uid_.IsDefault()) {
    _impl_.to_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyRequest.to_uid)
}

// int32 request_id = 4;
inline void NotifyRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = 0;
}
inline ::int32_t NotifyRequest::request_id() const {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyRequest.request_id)
  return _internal_request_id();
}
inline void NotifyRequest::set_request_id(::int32_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:my_grpc.NotifyRequest.request_id)
}
inline ::int32_t NotifyRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void NotifyRequest::_internal_set_request_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// string message = 5;
inline void NotifyRequest::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& NotifyRequest::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyRequest.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyRequest::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyRequest.message)
}
inline std::string* NotifyRequest::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyRequest.message)
  return _s;
}
inline const std::string& NotifyRequest::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void NotifyRequest::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* NotifyRequest::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* NotifyRequest::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyRequest.message)
  return _impl_.message_.Release();
}
inline void NotifyRequest::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyRequest.message)
}

// -------------------------------------------------------------------

// NotifyResponse

// int32 error = 1;
inline void NotifyResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
}
inline ::int32_t NotifyResponse::error() const {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyResponse.error)
  return _internal_error();
}
inline void NotifyResponse::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:my_grpc.NotifyResponse.error)
}
inline ::int32_t NotifyResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_;
}
inline void NotifyResponse::_internal_set_error(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string uid = 2;
inline void NotifyResponse::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& NotifyResponse::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyResponse.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyResponse::set_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyResponse.uid)
}
inline std::string* NotifyResponse::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyResponse.uid)
  return _s;
}
inline const std::string& NotifyResponse::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_.Get();
}
inline void NotifyResponse::_internal_set_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* NotifyResponse::_internal_mutable_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* NotifyResponse::release_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyResponse.uid)
  return _impl_.uid_.Release();
}
inline void NotifyResponse::set_allocated_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.uid_.IsDefault()) {
    _impl_.uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyResponse.uid)
}

// string token = 3;
inline void NotifyResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& NotifyResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyResponse.token)
}
inline std::string* NotifyResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyResponse.token)
  return _s;
}
inline const std::string& NotifyResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void NotifyResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* NotifyResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* NotifyResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyResponse.token)
  return _impl_.token_.Release();
}
inline void NotifyResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyResponse.token)
}

// -------------------------------------------------------------------

// NotifySendFriendApplyRequest

// string from_uid = 1;
inline void NotifySendFriendApplyRequest::clear_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.ClearToEmpty();
}
inline const std::string& NotifySendFriendApplyRequest::from_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyRequest.from_uid)
  return _internal_from_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifySendFriendApplyRequest::set_from_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyRequest.from_uid)
}
inline std::string* NotifySendFriendApplyRequest::mutable_from_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifySendFriendApplyRequest.from_uid)
  return _s;
}
inline const std::string& NotifySendFriendApplyRequest::_internal_from_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_uid_.Get();
}
inline void NotifySendFriendApplyRequest::_internal_set_from_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(value, GetArena());
}
inline std::string* NotifySendFriendApplyRequest::_internal_mutable_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_uid_.Mutable( GetArena());
}
inline std::string* NotifySendFriendApplyRequest::release_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifySendFriendApplyRequest.from_uid)
  return _impl_.from_uid_.Release();
}
inline void NotifySendFriendApplyRequest::set_allocated_from_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_uid_.IsDefault()) {
    _impl_.from_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifySendFriendApplyRequest.from_uid)
}

// string to_uid = 2;
inline void NotifySendFriendApplyRequest::clear_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.ClearToEmpty();
}
inline const std::string& NotifySendFriendApplyRequest::to_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyRequest.to_uid)
  return _internal_to_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifySendFriendApplyRequest::set_to_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyRequest.to_uid)
}
inline std::string* NotifySendFriendApplyRequest::mutable_to_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifySendFriendApplyRequest.to_uid)
  return _s;
}
inline const std::string& NotifySendFriendApplyRequest::_internal_to_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_uid_.Get();
}
inline void NotifySendFriendApplyRequest::_internal_set_to_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(value, GetArena());
}
inline std::string* NotifySendFriendApplyRequest::_internal_mutable_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_uid_.Mutable( GetArena());
}
inline std::string* NotifySendFriendApplyRequest::release_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifySendFriendApplyRequest.to_uid)
  return _impl_.to_uid_.Release();
}
inline void NotifySendFriendApplyRequest::set_allocated_to_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_uid_.IsDefault()) {
    _impl_.to_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifySendFriendApplyRequest.to_uid)
}

// string remark_name = 3;
inline void NotifySendFriendApplyRequest::clear_remark_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remark_name_.ClearToEmpty();
}
inline const std::string& NotifySendFriendApplyRequest::remark_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyRequest.remark_name)
  return _internal_remark_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifySendFriendApplyRequest::set_remark_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remark_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyRequest.remark_name)
}
inline std::string* NotifySendFriendApplyRequest::mutable_remark_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remark_name();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifySendFriendApplyRequest.remark_name)
  return _s;
}
inline const std::string& NotifySendFriendApplyRequest::_internal_remark_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remark_name_.Get();
}
inline void NotifySendFriendApplyRequest::_internal_set_remark_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remark_name_.Set(value, GetArena());
}
inline std::string* NotifySendFriendApplyRequest::_internal_mutable_remark_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remark_name_.Mutable( GetArena());
}
inline std::string* NotifySendFriendApplyRequest::release_remark_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifySendFriendApplyRequest.remark_name)
  return _impl_.remark_name_.Release();
}
inline void NotifySendFriendApplyRequest::set_allocated_remark_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remark_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.remark_name_.IsDefault()) {
    _impl_.remark_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifySendFriendApplyRequest.remark_name)
}

// string apply_message = 4;
inline void NotifySendFriendApplyRequest::clear_apply_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_message_.ClearToEmpty();
}
inline const std::string& NotifySendFriendApplyRequest::apply_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyRequest.apply_message)
  return _internal_apply_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifySendFriendApplyRequest::set_apply_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyRequest.apply_message)
}
inline std::string* NotifySendFriendApplyRequest::mutable_apply_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_apply_message();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifySendFriendApplyRequest.apply_message)
  return _s;
}
inline const std::string& NotifySendFriendApplyRequest::_internal_apply_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.apply_message_.Get();
}
inline void NotifySendFriendApplyRequest::_internal_set_apply_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_message_.Set(value, GetArena());
}
inline std::string* NotifySendFriendApplyRequest::_internal_mutable_apply_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.apply_message_.Mutable( GetArena());
}
inline std::string* NotifySendFriendApplyRequest::release_apply_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifySendFriendApplyRequest.apply_message)
  return _impl_.apply_message_.Release();
}
inline void NotifySendFriendApplyRequest::set_allocated_apply_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.apply_message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.apply_message_.IsDefault()) {
    _impl_.apply_message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifySendFriendApplyRequest.apply_message)
}

// int32 status = 5;
inline void NotifySendFriendApplyRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::int32_t NotifySendFriendApplyRequest::status() const {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyRequest.status)
  return _internal_status();
}
inline void NotifySendFriendApplyRequest::set_status(::int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyRequest.status)
}
inline ::int32_t NotifySendFriendApplyRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void NotifySendFriendApplyRequest::_internal_set_status(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// NotifySendFriendApplyResponse

// int32 error = 1;
inline void NotifySendFriendApplyResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
}
inline ::int32_t NotifySendFriendApplyResponse::error() const {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyResponse.error)
  return _internal_error();
}
inline void NotifySendFriendApplyResponse::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyResponse.error)
}
inline ::int32_t NotifySendFriendApplyResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_;
}
inline void NotifySendFriendApplyResponse::_internal_set_error(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string from_uid = 2;
inline void NotifySendFriendApplyResponse::clear_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.ClearToEmpty();
}
inline const std::string& NotifySendFriendApplyResponse::from_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyResponse.from_uid)
  return _internal_from_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifySendFriendApplyResponse::set_from_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyResponse.from_uid)
}
inline std::string* NotifySendFriendApplyResponse::mutable_from_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifySendFriendApplyResponse.from_uid)
  return _s;
}
inline const std::string& NotifySendFriendApplyResponse::_internal_from_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_uid_.Get();
}
inline void NotifySendFriendApplyResponse::_internal_set_from_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(value, GetArena());
}
inline std::string* NotifySendFriendApplyResponse::_internal_mutable_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_uid_.Mutable( GetArena());
}
inline std::string* NotifySendFriendApplyResponse::release_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifySendFriendApplyResponse.from_uid)
  return _impl_.from_uid_.Release();
}
inline void NotifySendFriendApplyResponse::set_allocated_from_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_uid_.IsDefault()) {
    _impl_.from_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifySendFriendApplyResponse.from_uid)
}

// string to_uid = 3;
inline void NotifySendFriendApplyResponse::clear_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.ClearToEmpty();
}
inline const std::string& NotifySendFriendApplyResponse::to_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifySendFriendApplyResponse.to_uid)
  return _internal_to_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifySendFriendApplyResponse::set_to_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifySendFriendApplyResponse.to_uid)
}
inline std::string* NotifySendFriendApplyResponse::mutable_to_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifySendFriendApplyResponse.to_uid)
  return _s;
}
inline const std::string& NotifySendFriendApplyResponse::_internal_to_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_uid_.Get();
}
inline void NotifySendFriendApplyResponse::_internal_set_to_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(value, GetArena());
}
inline std::string* NotifySendFriendApplyResponse::_internal_mutable_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_uid_.Mutable( GetArena());
}
inline std::string* NotifySendFriendApplyResponse::release_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifySendFriendApplyResponse.to_uid)
  return _impl_.to_uid_.Release();
}
inline void NotifySendFriendApplyResponse::set_allocated_to_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_uid_.IsDefault()) {
    _impl_.to_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifySendFriendApplyResponse.to_uid)
}

// -------------------------------------------------------------------

// NotifyHandleFriendApplyRequest

// string from_uid = 1;
inline void NotifyHandleFriendApplyRequest::clear_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.ClearToEmpty();
}
inline const std::string& NotifyHandleFriendApplyRequest::from_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyHandleFriendApplyRequest.from_uid)
  return _internal_from_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyHandleFriendApplyRequest::set_from_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyHandleFriendApplyRequest.from_uid)
}
inline std::string* NotifyHandleFriendApplyRequest::mutable_from_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyHandleFriendApplyRequest.from_uid)
  return _s;
}
inline const std::string& NotifyHandleFriendApplyRequest::_internal_from_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_uid_.Get();
}
inline void NotifyHandleFriendApplyRequest::_internal_set_from_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(value, GetArena());
}
inline std::string* NotifyHandleFriendApplyRequest::_internal_mutable_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_uid_.Mutable( GetArena());
}
inline std::string* NotifyHandleFriendApplyRequest::release_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyHandleFriendApplyRequest.from_uid)
  return _impl_.from_uid_.Release();
}
inline void NotifyHandleFriendApplyRequest::set_allocated_from_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_uid_.IsDefault()) {
    _impl_.from_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyHandleFriendApplyRequest.from_uid)
}

// string to_uid = 2;
inline void NotifyHandleFriendApplyRequest::clear_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.ClearToEmpty();
}
inline const std::string& NotifyHandleFriendApplyRequest::to_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyHandleFriendApplyRequest.to_uid)
  return _internal_to_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyHandleFriendApplyRequest::set_to_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyHandleFriendApplyRequest.to_uid)
}
inline std::string* NotifyHandleFriendApplyRequest::mutable_to_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyHandleFriendApplyRequest.to_uid)
  return _s;
}
inline const std::string& NotifyHandleFriendApplyRequest::_internal_to_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_uid_.Get();
}
inline void NotifyHandleFriendApplyRequest::_internal_set_to_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(value, GetArena());
}
inline std::string* NotifyHandleFriendApplyRequest::_internal_mutable_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_uid_.Mutable( GetArena());
}
inline std::string* NotifyHandleFriendApplyRequest::release_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyHandleFriendApplyRequest.to_uid)
  return _impl_.to_uid_.Release();
}
inline void NotifyHandleFriendApplyRequest::set_allocated_to_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_uid_.IsDefault()) {
    _impl_.to_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyHandleFriendApplyRequest.to_uid)
}

// int32 status = 3;
inline void NotifyHandleFriendApplyRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::int32_t NotifyHandleFriendApplyRequest::status() const {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyHandleFriendApplyRequest.status)
  return _internal_status();
}
inline void NotifyHandleFriendApplyRequest::set_status(::int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:my_grpc.NotifyHandleFriendApplyRequest.status)
}
inline ::int32_t NotifyHandleFriendApplyRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_;
}
inline void NotifyHandleFriendApplyRequest::_internal_set_status(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// -------------------------------------------------------------------

// NotifyHandleFriendApplyResponse

// int32 error = 1;
inline void NotifyHandleFriendApplyResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = 0;
}
inline ::int32_t NotifyHandleFriendApplyResponse::error() const {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyHandleFriendApplyResponse.error)
  return _internal_error();
}
inline void NotifyHandleFriendApplyResponse::set_error(::int32_t value) {
  _internal_set_error(value);
  // @@protoc_insertion_point(field_set:my_grpc.NotifyHandleFriendApplyResponse.error)
}
inline ::int32_t NotifyHandleFriendApplyResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_;
}
inline void NotifyHandleFriendApplyResponse::_internal_set_error(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_ = value;
}

// string from_uid = 2;
inline void NotifyHandleFriendApplyResponse::clear_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.ClearToEmpty();
}
inline const std::string& NotifyHandleFriendApplyResponse::from_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyHandleFriendApplyResponse.from_uid)
  return _internal_from_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyHandleFriendApplyResponse::set_from_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyHandleFriendApplyResponse.from_uid)
}
inline std::string* NotifyHandleFriendApplyResponse::mutable_from_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyHandleFriendApplyResponse.from_uid)
  return _s;
}
inline const std::string& NotifyHandleFriendApplyResponse::_internal_from_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_uid_.Get();
}
inline void NotifyHandleFriendApplyResponse::_internal_set_from_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.Set(value, GetArena());
}
inline std::string* NotifyHandleFriendApplyResponse::_internal_mutable_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_uid_.Mutable( GetArena());
}
inline std::string* NotifyHandleFriendApplyResponse::release_from_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyHandleFriendApplyResponse.from_uid)
  return _impl_.from_uid_.Release();
}
inline void NotifyHandleFriendApplyResponse::set_allocated_from_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_uid_.IsDefault()) {
    _impl_.from_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyHandleFriendApplyResponse.from_uid)
}

// string to_uid = 3;
inline void NotifyHandleFriendApplyResponse::clear_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.ClearToEmpty();
}
inline const std::string& NotifyHandleFriendApplyResponse::to_uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:my_grpc.NotifyHandleFriendApplyResponse.to_uid)
  return _internal_to_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NotifyHandleFriendApplyResponse::set_to_uid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:my_grpc.NotifyHandleFriendApplyResponse.to_uid)
}
inline std::string* NotifyHandleFriendApplyResponse::mutable_to_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_uid();
  // @@protoc_insertion_point(field_mutable:my_grpc.NotifyHandleFriendApplyResponse.to_uid)
  return _s;
}
inline const std::string& NotifyHandleFriendApplyResponse::_internal_to_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_uid_.Get();
}
inline void NotifyHandleFriendApplyResponse::_internal_set_to_uid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.Set(value, GetArena());
}
inline std::string* NotifyHandleFriendApplyResponse::_internal_mutable_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_uid_.Mutable( GetArena());
}
inline std::string* NotifyHandleFriendApplyResponse::release_to_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:my_grpc.NotifyHandleFriendApplyResponse.to_uid)
  return _impl_.to_uid_.Release();
}
inline void NotifyHandleFriendApplyResponse::set_allocated_to_uid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_uid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_uid_.IsDefault()) {
    _impl_.to_uid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:my_grpc.NotifyHandleFriendApplyResponse.to_uid)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace my_grpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // my_5fgrpc_2eproto_2epb_2eh
